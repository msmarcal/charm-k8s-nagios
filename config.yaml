# Copyright 2021 Marcelo Marcal
# See LICENSE file for licensing details.
#
options:
    extraconfig:
        type: string
        default: ""
        description: |
            Any additional nagios configuration you would like to
            add can be set into this element. It will be placed in
            /etc/nagios4/conf.d/extra.cfg
    # flap_detection:
    #     type: boolean
    #     default: true
    #     description: |
    #         Enable flap detection on monitored hosts and services.
    # contactgroup-members:
    #     type: string
    #     default: "root"
    #     description: |
    #         Comma separated list of contacts to add as members of the admins
    #         group.
    # enable_livestatus:
    #     type: boolean
    #     default: false
    #     description: |
    #         Config variable to enable livestatus module or not.
    # livestatus_path:
    #     type: string
    #     default: "/var/lib/nagios4/livestatus/socket"
    #     description: |
    #         Default path to livestatus socket, if enabled via enable_livestatus
    # livestatus_args:
    #     type: string
    #     default: ""
    #     description: |
    #         Arguments to be passed to the livestatus module, defaults to empty.
    # nagios_user:
    #     type: string
    #     default: nagios
    #     description: |
    #         The effective user that nagios will run as.
    # nagios_group:
    #     type: string
    #     default: nagios
    #     description: |
    #         The effective group that nagios will run as.
    # check_external_commands:
    #     type: int
    #     default: 1
    #     description: |
    #         Config variable to enable checking external commands - 0 is disable, 1 is enable.
    # command_check_interval:
    #     type: string
    #     default: "-1"
    #     description: |
    #         How often to check for external commands.
    # command_file:
    #     type: string
    #     default: /var/lib/nagios4/rw/nagios.cmd
    #     description: |
    #         File that Nagios checks for external command requests.
    # debug_level:
    #     type: int
    #     default: 0
    #     description: |
    #         Specify the debug level for nagios.  See the docs for more details.
    # debug_verbosity:
    #     type: int
    #     default: 1
    #     description: |
    #         How verbose will the debug logs be - 0 is brief, 1 is more detailed
    #         and 2 is very detailed.
    # debug_file:
    #     type: string
    #     default: "/var/log/nagios4/nagios.debug"
    #     description: |
    #         Path for the debug file.
    # daemon_dumps_core:
    #     type: int
    #     default: 0
    #     description:
    #         Option to determine if Nagios is allowed to create a core dump.
    # admin_email:
    #     type: string
    #     default: root@localhost
    #     description: |
    #         Comma separated list of email addresses used for the admin,
    #         used by $ADMINEMAIL$ in notification commands. If specify multiples emails,
    #         contactgroup-members will be ignored.
    # admin_pager:
    #     type: string
    #     default: pageroot@localhost
    #     description: |
    #         Email address used for the admin pager, used by $ADMINPAGER$ in
    #         notification commands.
    # enable_pagerduty:
    #     type: boolean
    #     default: false
    #     description: |
    #         Config variable to enable pagerduty notifications or not.
    # pagerduty_key:
    #     type: string
    #     default: ""
    #     description: |
    #         Pagerduty API key to use for notifications
    # pagerduty_path:
    #     type: string
    #     default: "/var/lib/nagios4/pagerduty"
    #     description: |
    #         Path for Pagerduty notifications to be queued.
    # log_rotation_method:
    #     type: string
    #     default: "d"
    #     description: |
    #         Log rotation method that Nagios should use to rotate the main logfile.
    # log_archive_path:
    #     type: string
    #     default: "/var/log/nagios4/archives"
    #     description: |
    #         Path for archived log files
    # use_syslog:
    #     type: int
    #     default: 1
    #     description: |
    #         Log messages to syslog as well as main file.
    # nagiosadmin:
    #     type: string
    #     default: 'nagiosadmin'
    #     description: >
    #         Username for Nagios admin user.
    # password:
    #     type: string
    #     default: ''
    #     description: |
    #         Password to use for Nagios administrative access.  If not
    #         provided, a password will be generated (see documentation for
    #         instructions on retrieving the generated password.)
    # ro-password:
    #     type: string
    #     default: ''
    #     description: |
    #         Password to use for read-only Nagios access.  If left blank, the nagiosro account will not be created.
    # monitor_self:
    #     type: boolean
    #     default: true
    #     description: |
    #         If true, enable monitoring of the nagios unit itself.
    # nagios_host_context:
    #     default: "juju"
    #     type: string
    #     description: |
    #         a string that will be prepended to instance name to set the host name
    #         in nagios. So for instance the hostname would be something like:
    #             juju-postgresql-0
    #         If you're running multiple environments with the same services in them
    #         this allows you to differentiate between them.
    # load_monitor:
    #     default: '5.0!4.0!3.0!10.0!6.0!4.0'
    #     type: string
    #     description: |
    #         A string to pass to the Nagios load monitoring command.  Default is
    #         to report warning at 5.0, 4.0 and 3.0 averages, critical at 10.0,
    #         6.0 and 4.0.
    # pagerduty_notification_levels:
    #     default: u,c,r
    #     type: string
    #     description: |
    #         A string to use for the service_notification_options in the
    #         pagerduty contact configuration.  Add w to page for warning events.
    # check_timeout:
    #     default: 10
    #     type: int
    #     description: |
    #         A number of seconds before nrpe checks timeout from not being able
    #         to connect to the client or finish execution of the command.
    #         Raise this value to combat 'CHECK_NRPE Socket timeout alerts'
    # service_check_timeout:
    #     default: 60
    #     type: int
    #     description: |
    #         Number of seconds Nagios allows for a service check before killing
    #         it off.  This ties in with service_check_timeout_state.  NRPE will
    #         alert for the lower of this value or check_timeout.  Also note that
    #         host_check_timeout is set to 30 seconds, and it's preferred to have
    #         service_check_timout greater than host_check_timeout.
    # service_check_timeout_state:
    #     default: c
    #     type: string
    #     description: |
    #         This setting determines the state Nagios will report when a
    #         service check times out - that is does not respond within
    #         service_check_timeout seconds.  This can be useful if a
    #         machine is running at too high a load and you do not want
    #         to consider a failed service check to be critical (the default).
    #         Valid settings are:
    #         c - Critical (default)
    #         u - Unknown
    #         w - Warning
    #         o - OK
    # admin_service_notification_period:
    #     default: "24x7"
    #     type: string
    #     description: |
    #         This directive is used to specify the short name of the time period during
    #         which the default admin contact can be notified about service problems or recoveries.
    #         You can think of this as an "on call" time for service notifications
    #         for the contact.  Read the documentation on time periods for more information
    #         on how this works and potential problems that may result from improper use.
    # admin_host_notification_period:
    #     default: "24x7"
    #     type: string
    #     description: |
    #         This directive is used to specify the short name of the time period during
    #         which the default admin contact can be notified about host problems or recoveries.
    #         You can think of this as an "on call" time for host notifications
    #         for the contact.  Read the documentation on time periods for more information
    #         on how this works and potential problems that may result from improper use.
    # admin_service_notification_options:
    #     default: "w,u,c,r"
    #     type: string
    #     description: |
    #         This directive is used to define the service states for which notifications
    #         can be sent out to the default admin contact.  Valid options are a combination of one
    #         or more of the following:
    #         w = notify on WARNING service states,
    #         u = notify on UNKNOWN service states,
    #         c = notify on CRITICAL service states,
    #         r = notify on service recoveries (OK states),
    #         f = notify when the service starts and stops flapping.
    #         If you specify n (none) as an option, the contact will not receive any type of service notifications.
    # admin_host_notification_options:
    #     default: "d,r"
    #     type: string
    #     description: |
    #         This directive is used to define the host states for which notifications
    #         can be sent out to the default admin contact.  Valid options are a combination of one
    #         or more of the following:
    #         d = notify on DOWN host states,
    #         u = notify on UNREACHABLE host states,
    #         r = notify on host recoveries (UP states),
    #         f = notify when the host starts and stops flapping,
    #         s = send notifications when host or service scheduled downtime starts and ends.
    #         If you specify n (none) as an option, the contact will not receive any type of host notifications.
    # admin_service_notification_commands:
    #     default: "notify-service-by-email"
    #     type: string
    #     description: |
    #         This directive is used to define a list of the short names of the commands
    #         used to notify the default admin contact of a service problem or recovery.
    #         Change this or add commands if you have custom notification plugins.
    #         Multiple notification commands should be separated by commas.
    #         All notification commands are executed when the contact needs to be notified.
    # admin_host_notification_commands:
    #     default: "notify-host-by-email"
    #     type: string
    #     description: |
    #         This directive is used to define a list of the short names of the commands
    #         used to notify the default admin contact of a host problem or recovery.
    #         Change this or add commands if you have custom notification plugins.
    #         Multiple notification commands should be separated by commas.
    #         All notification commands are executed when the contact needs to be notified.
    # send_traps_to:
    #     default: ""
    #     type: string
    #     description: |
    #         Defines the IP or Host Name to send snmp traps to. Leave blank (empty) to disable
    #         the traps functionality.
    # traps_service_notification_options:
    #     default: "w,u,c,r"
    #     type: string
    #     description: |
    #         This directive is used to define the service states for which notifications
    #         can be sent out to the default traps contact.  Valid options are a combination of one
    #         or more of the following:
    #         w = notify on WARNING service states,
    #         u = notify on UNKNOWN service states,
    #         c = notify on CRITICAL service states,
    #         r = notify on service recoveries (OK states),
    #         f = notify when the service starts and stops flapping.
    #         If you specify n (none) as an option, the contact will not receive any type of service notifications.
    # traps_host_notification_options:
    #     default: "d,r"
    #     type: string
    #     description: |
    #         This directive is used to define the host states for which notifications
    #         can be sent out to the default traps contact.  Valid options are a combination of one
    #         or more of the following:
    #         d = notify on DOWN host states,
    #         u = notify on UNREACHABLE host states,
    #         r = notify on host recoveries (UP states),
    #         f = notify when the host starts and stops flapping,
    #         s = send notifications when host or service scheduled downtime starts and ends.
    #         If you specify n (none) as an option, the contact will not receive any type of host notifications.
    # extra_contacts:
    #     default: ''
    #     type: string
    #     description: |
    #         Define extra contacts for Nagios. They will be appended in the
    #         default administrators contact group. This is useful for adding
    #         notification integrations with external services.
    #         Contacts are passed as a YAML array, and must have a contact name,
    #         a command to be executed for host notifications and a command to
    #         be executed for service notifications. These commands may use all
    #         relevant Nagios macros ($HOSTNAME$, $SERVICENAME$, etc). Refer to
    #         the Nagios documentation for more information.
    #         Only [A-Za-z0-9_-] contact names are valid. Be careful with
    #         commands, since they are not sanitized.
    #         Example
    #         - name: opsteam_email
    #           host: /usr/bin/sendmail -s "alert for $HOSTNAME$" opsteam@mycompany.com
    #           service: /usr/bin/sendmail -s "alert for $SERVICENAME$" opsteam@mycompany.com
    #         - name: snmp_collector
    #           host: /path/to/snmp/helper ....
    #           service: /path/to/snmp/helper ....
